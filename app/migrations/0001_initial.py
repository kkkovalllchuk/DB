# Generated by Django 4.2.7 on 2023-11-24 16:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Zno',
            fields=[
                ('OUTID', models.CharField(db_column='EOName', editable=False, primary_key=True, serialize=False)),
                ('Birth', models.CharField(db_column='Birth')),
                ('SEXTYPENAME', models.CharField(db_column='SEXTYPENAME')),
                ('REGNAME', models.CharField(db_column='REGNAME')),
                ('AREANAME', models.CharField(db_column='AREANAME')),
                ('TERNAME', models.CharField(db_column='TERNAME')),
                ('REGTYPENAME', models.CharField(db_column='REGTYPENAME')),
                ('TerTypeName', models.CharField(db_column='TerTypeName')),
                ('ClassProfileNAME', models.CharField(db_column='ClassProfileNAME')),
                ('ClassLangName', models.CharField(db_column='ClassLangName')),
                ('EONAME', models.CharField(db_column='EONAME')),
                ('EOTYPENAME', models.CharField(db_column='EOTYPENAME')),
                ('EORegName', models.CharField(db_column='EORegName')),
                ('EOAreaName', models.CharField(db_column='EOAreaName')),
                ('EOTerName', models.CharField(db_column='EOTerName')),
                ('EOParent', models.CharField(db_column='EOParent')),
                ('UkrTest', models.CharField(db_column='UkrTest')),
                ('UkrTestStatus', models.CharField(db_column='UkrTestStatus')),
                ('UkrBall100', models.FloatField(db_column='UkrBall100')),
                ('UkrBall12', models.FloatField(db_column='UkrBall12')),
                ('UkrBall', models.FloatField(db_column='UkrBall')),
                ('UkrAdaptScale', models.FloatField(db_column='UkrAdaptScale')),
                ('UkrPTName', models.CharField(db_column='UkrPTName')),
                ('UkrPTRegName', models.CharField(db_column='UkrPTRegName')),
                ('UkrPTAreaName', models.CharField(db_column='UkrPTAreaName')),
                ('UkrPTTerName', models.CharField(db_column='UkrPTTerName')),
                ('histTest', models.CharField(db_column='histTest')),
                ('HistLang', models.CharField(db_column='HistLang')),
                ('histTestStatus', models.CharField(db_column='histTestStatus')),
                ('histBall100', models.FloatField(db_column='histBall100')),
                ('histBall12', models.FloatField(db_column='histBall12')),
                ('histBall', models.FloatField(db_column='histBall')),
                ('histPTName', models.CharField(db_column='histPTName')),
                ('histPTRegName', models.CharField(db_column='histPTRegName')),
                ('histPTAreaName', models.CharField(db_column='histPTAreaName')),
                ('histPTTerName', models.CharField(db_column='histPTTerName')),
                ('mathTest', models.CharField(db_column='mathTest')),
                ('mathLang', models.CharField(db_column='mathLang')),
                ('mathTestStatus', models.CharField(db_column='mathTestStatus')),
                ('mathBall100', models.FloatField(db_column='mathBall100')),
                ('mathBall12', models.FloatField(db_column='mathBall12')),
                ('mathBall', models.FloatField(db_column='mathBall')),
                ('mathPTName', models.CharField(db_column='mathPTName')),
                ('mathPTRegName', models.CharField(db_column='mathPTRegName')),
                ('mathPTAreaName', models.CharField(db_column='mathPTAreaName')),
                ('mathPTTerName', models.CharField(db_column='mathPTTerName')),
                ('physTest', models.CharField(db_column='physTest')),
                ('physLang', models.CharField(db_column='physLang')),
                ('physTestStatus', models.CharField(db_column='physTestStatus')),
                ('physBall100', models.FloatField(db_column='physBall100')),
                ('physBall12', models.FloatField(db_column='physBall12')),
                ('physBall', models.FloatField(db_column='physBall')),
                ('physPTName', models.CharField(db_column='physPTName')),
                ('physPTRegName', models.CharField(db_column='physPTRegName')),
                ('physPTAreaName', models.CharField(db_column='physPTAreaName')),
                ('physPTTerName', models.CharField(db_column='physPTTerName')),
                ('chemTest', models.CharField(db_column='chemTest')),
                ('chemLang', models.CharField(db_column='chemLang')),
                ('chemTestStatus', models.CharField(db_column='chemTestStatus')),
                ('chemBall100', models.FloatField(db_column='chemBall100')),
                ('chemBall12', models.FloatField(db_column='chemBall12')),
                ('chemBall', models.FloatField(db_column='chemBall')),
                ('chemPTName', models.CharField(db_column='chemPTName')),
                ('chemPTRegName', models.CharField(db_column='chemPTRegName')),
                ('chemPTAreaName', models.CharField(db_column='chemPTAreaName')),
                ('chemPTTerName', models.CharField(db_column='chemPTTerName')),
                ('bioTest', models.CharField(db_column='bioTest')),
                ('bioLang', models.CharField(db_column='bioLang')),
                ('bioTestStatus', models.CharField(db_column='bioTestStatus')),
                ('bioBall100', models.FloatField(db_column='bioBall100')),
                ('bioBall12', models.FloatField(db_column='bioBall12')),
                ('bioBall', models.FloatField(db_column='bioBall')),
                ('bioPTName', models.CharField(db_column='bioPTName')),
                ('bioPTRegName', models.CharField(db_column='bioPTRegName')),
                ('bioPTAreaName', models.CharField(db_column='bioPTAreaName')),
                ('bioPTTerName', models.CharField(db_column='bioPTTerName')),
                ('geoTest', models.CharField(db_column='geoTest')),
                ('geoLang', models.CharField(db_column='geoLang')),
                ('geoTestStatus', models.CharField(db_column='geoTestStatus')),
                ('geoBall100', models.FloatField(db_column='geoBall100')),
                ('geoBall12', models.FloatField(db_column='geoBall12')),
                ('geoBall', models.FloatField(db_column='geoBall')),
                ('geoPTName', models.CharField(db_column='geoPTName')),
                ('geoPTRegName', models.CharField(db_column='geoPTRegName')),
                ('geoPTAreaName', models.CharField(db_column='geoPTAreaName')),
                ('geoPTTerName', models.CharField(db_column='geoPTTerName')),
                ('engTest', models.CharField(db_column='engTest')),
                ('engTestStatus', models.CharField(db_column='engTestStatus')),
                ('engBall100', models.FloatField(db_column='engBall100')),
                ('engBall12', models.FloatField(db_column='engBall12')),
                ('engDPALevel', models.CharField(db_column='engDPALevel')),
                ('engBall', models.FloatField(db_column='engBall')),
                ('engPTName', models.CharField(db_column='engPTName')),
                ('engPTRegName', models.CharField(db_column='engPTRegName')),
                ('engPTAreaName', models.CharField(db_column='engPTAreaName')),
                ('engPTTerName', models.CharField(db_column='engPTTerName')),
                ('fraTest', models.CharField(db_column='fraTest')),
                ('fraTestStatus', models.CharField(db_column='fraTestStatus')),
                ('fraBall100', models.FloatField(db_column='fraBall100')),
                ('fraBall12', models.FloatField(db_column='fraBall12')),
                ('fraDPALevel', models.CharField(db_column='fraDPALevel')),
                ('fraBall', models.FloatField(db_column='fraBall')),
                ('fraPTName', models.CharField(db_column='fraPTName')),
                ('fraPTRegName', models.CharField(db_column='fraPTRegName')),
                ('fraPTAreaName', models.CharField(db_column='fraPTAreaName')),
                ('fraPTTerName', models.CharField(db_column='fraPTTerName')),
                ('deuTest', models.CharField(db_column='deuTest')),
                ('deuTestStatus', models.CharField(db_column='deuTestStatus')),
                ('deuBall100', models.FloatField(db_column='deuBall100')),
                ('deuBall12', models.FloatField(db_column='deuBall12')),
                ('deuDPALevel', models.CharField(db_column='deuDPALevel')),
                ('deuBall', models.FloatField(db_column='deuBall')),
                ('deuPTName', models.CharField(db_column='deuPTName')),
                ('deuPTRegName', models.CharField(db_column='deuPTRegName')),
                ('deuPTAreaName', models.CharField(db_column='deuPTAreaName')),
                ('deuPTTerName', models.CharField(db_column='deuPTTerName')),
                ('spaTest', models.CharField(db_column='spaTest')),
                ('spaTestStatus', models.CharField(db_column='spaTestStatus')),
                ('spaBall100', models.FloatField(db_column='spaBall100')),
                ('spaBall12', models.FloatField(db_column='spaBall12')),
                ('spaDPALevel', models.CharField(db_column='spaDPALevel')),
                ('spaBall', models.FloatField(db_column='spaBall')),
                ('spaPTName', models.CharField(db_column='spaPTName')),
                ('spaPTRegName', models.CharField(db_column='spaPTRegName')),
                ('spaPTAreaName', models.CharField(db_column='spaPTAreaName')),
                ('spaPTTerName', models.CharField(db_column='spaPTTerName')),
                ('year', models.CharField()),
            ],
            options={
                'db_table': 'zno',
            },
        ),
    ]
