from django.db import models


class Zno(models.Model):
    OUTID              = models.CharField(db_column='OUTID', primary_key=True, editable=False)
    
    Birth              = models.CharField(db_column='Birth', null=True)
    SEXTYPENAME        = models.CharField(db_column='SEXTYPENAME', null=True)
    REGNAME            = models.CharField(db_column='REGNAME', null=True)
    AREANAME           = models.CharField(db_column='AREANAME', null=True)
    TERNAME            = models.CharField(db_column='TERNAME', null=True)
    REGTYPENAME        = models.CharField(db_column='REGTYPENAME', null=True)
    TerTypeName        = models.CharField(db_column='TerTypeName', null=True)
    ClassProfileNAME   = models.CharField(db_column='ClassProfileNAME', null=True)
    ClassLangName      = models.CharField(db_column='ClassLangName', null=True)
    
    EONAME             = models.CharField(db_column='EONAME', null=True)
    EOTYPENAME         = models.CharField(db_column='EOTYPENAME', null=True)
    EORegName          = models.CharField(db_column='EORegName', null=True)
    EOAreaName         = models.CharField(db_column='EOAreaName', null=True)
    EOTerName          = models.CharField(db_column='EOTerName', null=True)
    EOParent           = models.CharField(db_column='EOParent', null=True)
    
    UkrTest            = models.CharField(db_column='UkrTest', null=True)
    UkrTestStatus      = models.CharField(db_column='UkrTestStatus', null=True)
    UkrBall100         = models.FloatField(db_column='UkrBall100', null=True)
    UkrBall12          = models.FloatField(db_column='UkrBall12', null=True)
    UkrBall            = models.FloatField(db_column='UkrBall', null=True)
    UkrAdaptScale      = models.FloatField(db_column='UkrAdaptScale', null=True)
    UkrPTName          = models.CharField(db_column='UkrPTName', null=True)
    UkrPTRegName       = models.CharField(db_column='UkrPTRegName', null=True)
    UkrPTAreaName      = models.CharField(db_column='UkrPTAreaName', null=True)
    UkrPTTerName       = models.CharField(db_column='UkrPTTerName', null=True)
    
    histTest           = models.CharField(db_column='histTest', null=True)
    HistLang           = models.CharField(db_column='HistLang', null=True)
    histTestStatus     = models.CharField(db_column='histTestStatus', null=True)
    histBall100        = models.FloatField(db_column='histBall100', null=True)
    histBall12         = models.FloatField(db_column='histBall12', null=True)
    histBall           = models.FloatField(db_column='histBall', null=True)
    histPTName         = models.CharField(db_column='histPTName', null=True)
    histPTRegName      = models.CharField(db_column='histPTRegName', null=True)
    histPTAreaName     = models.CharField(db_column='histPTAreaName', null=True)
    histPTTerName      = models.CharField(db_column='histPTTerName', null=True)
    
    mathTest           = models.CharField(db_column='mathTest', null=True)
    mathLang           = models.CharField(db_column='mathLang', null=True)
    mathTestStatus     = models.CharField(db_column='mathTestStatus', null=True)
    mathBall100        = models.FloatField(db_column='mathBall100', null=True)
    mathBall12         = models.FloatField(db_column='mathBall12', null=True)
    mathBall           = models.FloatField(db_column='mathBall', null=True)
    mathPTName         = models.CharField(db_column='mathPTName', null=True)
    mathPTRegName      = models.CharField(db_column='mathPTRegName', null=True)
    mathPTAreaName     = models.CharField(db_column='mathPTAreaName', null=True)
    mathPTTerName      = models.CharField(db_column='mathPTTerName', null=True)
    
    physTest           = models.CharField(db_column='physTest', null=True)
    physLang           = models.CharField(db_column='physLang', null=True)
    physTestStatus     = models.CharField(db_column='physTestStatus', null=True)
    physBall100        = models.FloatField(db_column='physBall100', null=True)
    physBall12         = models.FloatField(db_column='physBall12', null=True)
    physBall           = models.FloatField(db_column='physBall', null=True)
    physPTName         = models.CharField(db_column='physPTName', null=True)
    physPTRegName      = models.CharField(db_column='physPTRegName', null=True)
    physPTAreaName     = models.CharField(db_column='physPTAreaName', null=True)
    physPTTerName      = models.CharField(db_column='physPTTerName', null=True)
    
    chemTest           = models.CharField(db_column='chemTest', null=True)
    chemLang           = models.CharField(db_column='chemLang', null=True)
    chemTestStatus     = models.CharField(db_column='chemTestStatus', null=True)
    chemBall100        = models.FloatField(db_column='chemBall100', null=True)
    chemBall12         = models.FloatField(db_column='chemBall12', null=True)
    chemBall           = models.FloatField(db_column='chemBall', null=True)
    chemPTName         = models.CharField(db_column='chemPTName', null=True)
    chemPTRegName      = models.CharField(db_column='chemPTRegName', null=True)
    chemPTAreaName     = models.CharField(db_column='chemPTAreaName', null=True)
    chemPTTerName      = models.CharField(db_column='chemPTTerName', null=True)
    
    bioTest            = models.CharField(db_column='bioTest', null=True)
    bioLang            = models.CharField(db_column='bioLang', null=True)
    bioTestStatus      = models.CharField(db_column='bioTestStatus', null=True)
    bioBall100         = models.FloatField(db_column='bioBall100', null=True)
    bioBall12          = models.FloatField(db_column='bioBall12', null=True)
    bioBall            = models.FloatField(db_column='bioBall', null=True)
    bioPTName          = models.CharField(db_column='bioPTName', null=True)
    bioPTRegName       = models.CharField(db_column='bioPTRegName', null=True)
    bioPTAreaName      = models.CharField(db_column='bioPTAreaName', null=True)
    bioPTTerName       = models.CharField(db_column='bioPTTerName', null=True)
    
    geoTest            = models.CharField(db_column='geoTest', null=True)
    geoLang            = models.CharField(db_column='geoLang', null=True)
    geoTestStatus      = models.CharField(db_column='geoTestStatus', null=True)
    geoBall100         = models.FloatField(db_column='geoBall100', null=True)
    geoBall12          = models.FloatField(db_column='geoBall12', null=True)
    geoBall            = models.FloatField(db_column='geoBall', null=True)
    geoPTName          = models.CharField(db_column='geoPTName', null=True)
    geoPTRegName       = models.CharField(db_column='geoPTRegName', null=True)
    geoPTAreaName      = models.CharField(db_column='geoPTAreaName', null=True)
    geoPTTerName       = models.CharField(db_column='geoPTTerName', null=True)
    
    engTest            = models.CharField(db_column='engTest', null=True)
    engTestStatus      = models.CharField(db_column='engTestStatus', null=True)
    engBall100         = models.FloatField(db_column='engBall100', null=True)
    engBall12          = models.FloatField(db_column='engBall12', null=True)
    engBall12          = models.FloatField(db_column='engBall12', null=True)
    engDPALevel        = models.CharField(db_column='engDPALevel', null=True)
    engBall            = models.FloatField(db_column='engBall', null=True)
    engPTName          = models.CharField(db_column='engPTName', null=True)
    engPTRegName       = models.CharField(db_column='engPTRegName', null=True)
    engPTAreaName      = models.CharField(db_column='engPTAreaName', null=True)
    engPTTerName       = models.CharField(db_column='engPTTerName', null=True)
    
    fraTest            = models.CharField(db_column='fraTest', null=True)
    fraTestStatus      = models.CharField(db_column='fraTestStatus', null=True)
    fraBall100         = models.FloatField(db_column='fraBall100', null=True)
    fraBall12          = models.FloatField(db_column='fraBall12', null=True)
    fraDPALevel        = models.CharField(db_column='fraDPALevel', null=True)
    fraBall            = models.FloatField(db_column='fraBall', null=True)
    fraPTName          = models.CharField(db_column='fraPTName', null=True)
    fraPTRegName       = models.CharField(db_column='fraPTRegName', null=True)
    fraPTAreaName      = models.CharField(db_column='fraPTAreaName', null=True)
    fraPTTerName       = models.CharField(db_column='fraPTTerName', null=True)
    
    deuTest            = models.CharField(db_column='deuTest', null=True)
    deuTestStatus      = models.CharField(db_column='deuTestStatus', null=True)
    deuBall100         = models.FloatField(db_column='deuBall100', null=True)
    deuBall12          = models.FloatField(db_column='deuBall12', null=True)
    deuDPALevel        = models.CharField(db_column='deuDPALevel', null=True)
    deuBall            = models.FloatField(db_column='deuBall', null=True)
    deuPTName          = models.CharField(db_column='deuPTName', null=True)
    deuPTRegName       = models.CharField(db_column='deuPTRegName', null=True)
    deuPTAreaName      = models.CharField(db_column='deuPTAreaName', null=True)
    deuPTTerName       = models.CharField(db_column='deuPTTerName', null=True)
    
    spaTest            = models.CharField(db_column='spaTest', null=True)
    spaTestStatus      = models.CharField(db_column='spaTestStatus', null=True)
    spaBall100         = models.FloatField(db_column='spaBall100', null=True)
    spaBall12          = models.FloatField(db_column='spaBall12', null=True)
    spaDPALevel        = models.CharField(db_column='spaDPALevel', null=True)
    spaBall            = models.FloatField(db_column='spaBall', null=True)
    spaPTName          = models.CharField(db_column='spaPTName', null=True)
    spaPTRegName       = models.CharField(db_column='spaPTRegName', null=True)
    spaPTAreaName      = models.CharField(db_column='spaPTAreaName', null=True)
    spaPTTerName       = models.CharField(db_column='spaPTTerName', null=True)
    
    year               = models.CharField()
    
    class Meta:
        db_table = "zno"
